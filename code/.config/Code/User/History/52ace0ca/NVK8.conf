#
# # ░█░█░█░█░█▀█░█▀▄░█░░░█▀█░█▀█░█▀▄            
# # ░█▀█░░█░░█▀▀░█▀▄░█░░░█▀█░█░█░█░█            
# # ░▀░▀░░▀░░▀░░░▀░▀░▀▀▀░▀░▀░▀░▀░▀▀░            
# # ░█░█░█▀▀░█░█░█▀▄░▀█▀░█▀█░█▀▄░▀█▀░█▀█░█▀▀░█▀▀
# # ░█▀▄░█▀▀░░█░░█▀▄░░█░░█░█░█░█░░█░░█░█░█░█░▀▀█
# # ░▀░▀░▀▀▀░░▀░░▀▀░░▀▀▀░▀░▀░▀▀░░▀▀▀░▀░▀░▀▀▀░▀▀▀
#
# see https://wiki.hyprland.org/configuring/keywords/ for more
# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description

$scriptPath = $XDG_CONFIG_HOME/hypr/scripts
$rofiPath = $XDG_CONFIG_HOME/rofi

#*  Variables 
# Default if commented out
$mainMod = Super # super / meta / windows key

# Assign apps
$TERMINAL = kitty
$EDITOR = code
$EXPLORER = nemo
$BROWSER = firefox

# #  █   █ █ █▄ █ █▀▄ ▄▀▄ █   █   █▄ ▄█ ▄▀▄ █▄ █ ▄▀▄ ▄▀  ██▀ █▄ ▄█ ██▀ █▄ █ ▀█▀
# #  ▀▄▀▄▀ █ █ ▀█ █▄▀ ▀▄▀ ▀▄▀▄▀   █ ▀ █ █▀█ █ ▀█ █▀█ ▀▄█ █▄▄ █ ▀ █ █▄▄ █ ▀█  █ 

$wm=Window Management
$d=[$wm]

bindd = $mainMod, Q, $d close focused window, killactive
bindd = $mainMod Shift, Q, $d close focused window (force), forcekillactive
bindd = $mainMod, Delete, $d kill hyprland session, exit
bindd = $mainMod Shift, L, $d lock screen, exec, hyprlock

bindd = $mainMod, W, $d Toggle floating,  exec, hyprctl --batch "dispatch togglefloating; dispatch resizeactive exact 50% 40%; dispatch centerwindow;"
# bindd = $mainMod, W, $d Toggle floating,  exec, hyprctl --batch 'dispatch settiled; dispatch movewindowpixel exact 1440 2484, pid:4034; dispatch resizewindowpixel 476 1010,pid:4034'
# bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh

bindd = $mainMod, F, $d toggle fullscreen, fullscreen

# bindd = $mainMod Control Alt, Delete, $d logout menu, exec, $scrPath/logoutlaunch.sh # Dial it to use rofi Powermenu
# bindd = $mainMod Alt_L, Control_L, $d toggle waybar and reload config, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh)
# bindd = ALT_R, Control_R,toggle waybar, exec, killall waybar || waybar # toggle waybar without reloading, this is faster


$d=[$wm|Change focus]
bindd = $mainMod, Left, $d focus left, movefocus, l
bindd = $mainMod, Right, $d focus right , movefocus, r
bindd = $mainMod, Up, $d focus up , movefocus, u
bindd = $mainMod, Down , $d focus down, movefocus, d
# bindd = ALT, Tab, $d Cycle focus, cyclenext

$d=[$wm|Resize Active Window]
# Resize windows :: mainMod + Shift
bindde = $mainMod Shift, Right, $d resize window right , resizeactive, 30 0
bindde = $mainMod Shift, Left, $d resize window left, resizeactive, -30 0
bindde = $mainMod Shift, Up, $d resize window up, resizeactive, 0 -30
bindde = $mainMod Shift, Down, $d resize  window down, resizeactive, 0 30

# Move active window around current workspace :: mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Shift Control, left, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift Control, right, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift Control, up, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift Control, down, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Move/Resize focused window :: mainMod + mouse/Z/X
$d=[$wm|Move & Resize with mouse]
binddm = $mainMod, mouse:272, $d hold to move window, movewindow
binddm = $mainMod, mouse:273, $d hold to resize window, resizewindow
binddm = $mainMod, Z, $d hold to move window , movewindow
binddm = $mainMod, X, $d hold to resize window, resizewindow

# Toggle focused window split
$d=[$wm]
bindd = $mainMod, J, $d toggle split, togglesplit


# #  ▄▀  █▀▄ ▄▀▄ █ █ █▀▄   █▄ ▄█ ▄▀▄ █▄ █ ▄▀▄ ▄▀  ██▀ █▄ ▄█ ██▀ █▄ █ ▀█▀
# #  ▀▄█ █▀▄ ▀▄▀ ▀▄█ █▀    █ ▀ █ █▀█ █ ▀█ █▀█ ▀▄█ █▄▄ █ ▀ █ █▄▄ █ ▀█  █ 

$d=[$wm|Group Navigation]
bindd = $mainMod, G, $d toggle group, togglegroup
# bindds = $mainMod&Shift, G&Left, $d toggle group move, movewindoworgroup, l
# bindd = $mainMod Shift_R, G, $d toggle group move, movewindoworgroup, r
bindd = $mainMod Control, H, $d change active group backwards   , changegroupactive, b
bindd = $mainMod Control, L, $d change active group forwards  , changegroupactive, f

# #  ▄▀▄ █▀▄ █▀▄   █   ▄▀▄ █ █ █▄ █ ▄▀▀ █▄█
# #  █▀█ █▀  █▀    █▄▄ █▀█ ▀▄█ █ ▀█ ▀▄▄ █ █

$l=Launcher
$d=[$l|Apps]
bindd = $mainMod, T, $d terminal emulator , exec, $TERMINAL
bindd = $mainMod, E, $d file explorer , exec, $EXPLORER
bindd = $mainMod, C, $d text editor , exec, $EDITOR
bindd = $mainMod, B, $d web browser , exec, $BROWSER
bindd = Control Shift, Escape, $d system monitor , exec, btop
bindd = $mainMod, V, $d clipboard manager, exec, copyq show

# #  █▀▄ ▄▀▄ █▀ █   █▄ ▄█ ██▀ █▄ █ █ █
# #  █▀▄ ▀▄▀ █▀ █   █ ▀ █ █▄▄ █ ▀█ ▀▄█

$d=[$l|Rofi menus]
$rofi-launch = rofi -terminal kitty
$rofi-set-1 = $rofi-launch -modi "drun,run,ssh,filebrowser"
$rofi-set-2 = $rofi-launch -modi ":~/.config/rofi/rofi-web-search/rofi-web-search.py,calc"

binddpe = $mainMod, SPACE, $d application finder , exec, pkill -x rofi || $rofi-set-1 -show drun
bindd = $mainMod Alt, SPACE, $d application finder , exec, pkill -x rofi || $rofi-set-2 -show 
# launch window switcher
bindd = $mainMod, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch -show window -modi window -theme-str 'mode-switcher {enabled: false;} listview {lines: 10; fixed-height: false;}'
# launch emoji picker
# bindd = $mainMod, comma, $d emoji  picker , exec, pkill -x rofi || rofi -modi emoji -show emoji -emoji-format '{emoji}' -theme-str 'listview { columns: 8; lines: 8;flow: horizontal;} mode-switcher { enabled: false; } window { width: 400px; height:400px; padding: 2px; } element { padding: 10px; margin: 0;} inputbar { padding: 5px; margin: 0;}' 

# #  █▄█ ▄▀▄ █▀▄ █▀▄ █   █ ▄▀▄ █▀▄ ██▀   ▄▀▀ ▄▀▄ █▄ █ ▀█▀ █▀▄ ▄▀▄ █  
# #  █ █ █▀█ █▀▄ █▄▀ ▀▄▀▄▀ █▀█ █▀▄ █▄▄   ▀▄▄ ▀▄▀ █ ▀█  █  █▀▄ ▀▄▀ █▄▄

$hc=Hardware Controls
$d=[$hc|Audio]
# binddl  = , F10, $d toggle mute output , exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
# binddel = , F11, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
# binddel = , F12, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume
binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume

# $d=[$hc|Media]
# binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # toggle between media play and pause
# binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # toggle between media play and pause
# binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # media next
# binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # media previous

$d=[$hc|Brightness]
binddel = , XF86MonBrightnessUp, $d increase brightness , exec, $scriptPath/brightness-control.sh 'all' + 5 # increase brightness
binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, $scriptPath/brightness-control.sh 'all' - 5 # decrease brightness
binddel = Ctrl, XF86MonBrightnessUp, $d increase brightness , exec, $scriptPath/brightness-control.sh 'focused' + 5 # increase brightness
binddel = Ctrl, XF86MonBrightnessDown, $d decrease brightness , exec, $scriptPath/brightness-control.sh 'focused' - 5 # decrease brightness
binddel = Alt, XF86MonBrightnessDown, $d decrease Temperature, exec, hyprctl hyprsunset temperature -500
binddel = Alt, XF86MonBrightnessUp, $d increase Temperature, exec,  hyprctl hyprsunset temperature +500

#  █ █ ▀█▀ █ █   █ ▀█▀ █ ██▀ ▄▀▀
#  ▀▄█  █  █ █▄▄ █  █  █ █▄▄ ▄██

$ut=Utilities
$d=[$ut]
# binddl = $mainMod, K, $d toggle keyboard layout , exec, $scrPath/keyboardswitch.sh # switch keyboard layout
bindd = $mainMod Alt, G, $d game mode , exec, $scriptPath/gamemode.sh # disable hypr effects for gamemode
# bindd = $mainMod Shift, G, $d open game launcher , exec, $scrPath/gamelauncher.sh # run game launcher for steam and lutris

$d=[$ut|Screen Capture] 
bindd = $mainMod Shift, P, $d color picker, exec, hyprpicker -an # Pick color (Hex) >> clipboard#

$screenshotPath = $HOME/Pictures/Screenshots/

bindd = , Print, $d snip screen , exec, $rofiPath/screenshot/screenshot.sh # partial screenshot capture
bindd = Control, Print, $d freeze and snip screen, exec, grimblast save area $screenshotPath/Screenshot_$(date +"%Y%m%d%H%M%S").png # partial screenshot capture (frozen screen)
binddl = Control Shift, Print, $d print all monitors , exec, grimblast save output $screenshotPath/Screenshot_$(date +"%Y%m%d%H%M%S").png # all monitors screenshot capture
binddl = Alt, Print, $d print monitor , exec, grimblast save screen $screenshotPath/Screenshot_$(date +"%Y%m%d%H%M%S").png # monitor screenshot capture

# #  █   █ ▄▀▄ █▀▄ █▄▀ ▄▀▀ █▀▄ ▄▀▄ ▄▀▀ ██▀ ▄▀▀
# #  ▀▄▀▄▀ ▀▄▀ █▀▄ █ █ ▄██ █▀  █▀█ ▀▄▄ █▄▄ ▄██

$ws=Workspaces
$d=[$ws|Navigation]
bindd = $mainMod, 1, $d navigate to workspace 1, workspace, 1
bindd = $mainMod, 2, $d navigate to workspace 2, workspace, 2
bindd = $mainMod, 3, $d navigate to workspace 3, workspace, 3
bindd = $mainMod, 4, $d navigate to workspace 4, workspace, 4
bindd = $mainMod, 5, $d navigate to workspace 5, workspace, 5
bindd = $mainMod, 6, $d navigate to workspace 6, workspace, 6
bindd = $mainMod, 7, $d navigate to workspace 7, workspace, 7
bindd = $mainMod, 8, $d navigate to workspace 8, workspace, 8
bindd = $mainMod, 9, $d navigate to workspace 9, workspace, 9
bindd = $mainMod, 0, $d navigate to workspace 10, workspace, 10

$d=[$ws|Navigation|Relative workspace]
bindd = $mainMod Control, Right, $d change active workspace forwards  , workspace, r+1
bindd = $mainMod Control, Left, $d change active workspace backwards , workspace, r-1

$d=[$ws|Navigation]
bindd = $mainMod Control, Down, $d navigate to the nearest empty workspace , workspace, empty

# Move focused window to a workspace
$d=[$ws|Move window to workspace]
bindd = $mainMod Shift, 1, $d move to workspace 1, movetoworkspace, 1
bindd = $mainMod Shift, 2, $d move to workspace 2, movetoworkspace, 2
bindd = $mainMod Shift, 3, $d move to workspace 3, movetoworkspace, 3
bindd = $mainMod Shift, 4, $d move to workspace 4, movetoworkspace, 4
bindd = $mainMod Shift, 5, $d move to workspace 5, movetoworkspace, 5
bindd = $mainMod Shift, 6, $d move to workspace 6, movetoworkspace, 6
bindd = $mainMod Shift, 7, $d move to workspace 7, movetoworkspace, 7
bindd = $mainMod Shift, 8, $d move to workspace 8, movetoworkspace, 8
bindd = $mainMod Shift, 9, $d move to workspace 9, movetoworkspace, 9
bindd = $mainMod Shift, 0, $d move to workspace 10, movetoworkspace, 10

# Move focused window to a relative workspace
$d=[$ws]
bindd = $mainMod Control+Alt, Right, $d move window to next relative workspace , movetoworkspace, r+1
bindd = $mainMod Control+Alt, Left, $d move window to previous relative workspace , movetoworkspace, r-1

# Scroll through existing workspaces
$d=[$ws|Navigation]
bindd = $mainMod, mouse_down, $d next workspace, workspace, e+1
bindd = $mainMod, mouse_up, $d previous workspace, workspace, e-1

# Move/Switch to special workspace (scratchpad)
$d=[$ws|Navigation|Special workspace]
bindd = $mainMod Shift, S, $d move to scratchpad  , movetoworkspace, special
bindd = $mainMod Alt, S, $d move to scratchpad (silent) , movetoworkspacesilent, special
bindd = $mainMod, S, $d toggle scratchpad ,  togglespecialworkspace

# Move focused window to a workspace silently (Alt)
$d=[$ws|Navigation|Move window silently]
bindd = $mainMod Alt, 1, $d move to workspace 1  (silent), movetoworkspacesilent, 1
bindd = $mainMod Alt, 2, $d move to workspace 2  (silent), movetoworkspacesilent, 2
bindd = $mainMod Alt, 3, $d move to workspace 3  (silent), movetoworkspacesilent, 3
bindd = $mainMod Alt, 4, $d move to workspace 4  (silent), movetoworkspacesilent, 4
bindd = $mainMod Alt, 5, $d move to workspace 5  (silent), movetoworkspacesilent, 5
bindd = $mainMod Alt, 6, $d move to workspace 6  (silent), movetoworkspacesilent, 6
bindd = $mainMod Alt, 7, $d move to workspace 7  (silent), movetoworkspacesilent, 7
bindd = $mainMod Alt, 8, $d move to workspace 8  (silent), movetoworkspacesilent, 8
bindd = $mainMod Alt, 9, $d move to workspace 9  (silent), movetoworkspacesilent, 9
bindd = $mainMod Alt, 0, $d move to workspace 10 (silent), movetoworkspacesilent, 10

$d=#! unset the group name
